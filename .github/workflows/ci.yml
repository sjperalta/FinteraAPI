name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  pipeline-steps:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fintera_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d fintera_test" --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:6
        ports:
          - 6379:6379

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine Ruby version
        run: |
          if [ -f ".ruby-version" ]; then
            ver=$(cat .ruby-version)
          else
            ver=$(grep -E "^[[:space:]]*ruby[[:space:]]+['\"]([0-9]+\.[0-9]+\.[0-9]+)['\"]" Gemfile | sed -E "s/.*ruby[[:space:]]+['\"]([^'\" ]+)['\"].*/\1/")
          fi
          if [ -z "$ver" ]; then
            ver="3.3.6"
          fi
          echo "RUBY_VERSION=$ver" >> $GITHUB_ENV
          echo "Detected Ruby version: $ver"

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Configure Bundler path
        run: |
          mkdir -p vendor/bundle
          bundle config set --local path "vendor/bundle"

      - name: Cache gems
        uses: actions/cache@v4
        with:
          path: |
            vendor/bundle
            ~/.bundle
            ~/.cache/bundler
            ~/.gem
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}-ruby-${{ env.RUBY_VERSION }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev

      - name: Install gems
        run: bundle install --jobs 4 --retry 3

      - name: Prepare DB config
        run: |
          cp config/database.yml.ci config/database.yml || true
          echo "HOSTNAME=localhost" >> $GITHUB_ENV

      - name: Wait for Postgres
        run: until pg_isready -h localhost -p 5432 -U postgres; do sleep 1; done

      - name: Setup DB
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/fintera_test
        run: |
          bundle exec rails db:create db:schema:load

      - name: Run RuboCop (warnings only)
        continue-on-error: true
        run: bundle exec rubocop --parallel --format simple || echo "RuboCop found issues (non-blocking)"

      - name: Security audit
        run: bundle audit check --update

      - name: Run specs
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/fintera_test
          SENTRY_DSN: ""
          SENTRY_ENV: "test"
        run: bundle exec rspec --format progress
